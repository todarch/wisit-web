version: 2

references:

  container_config: &container_config
    docker:
      - image: circleci/node:11.1.0 # this image has docker client
    working_directory: ~/repo

  restore_repo: &restore_repo
    restore_cache:
      keys:
        - v1-repo-{{ .Branch }}-{{ .Revision }}
        - v1-repo-{{ .Branch }}
        - v1-repo

  dep_cache_key: &dep_cache_key
    v1-dependencies-{{ checksum "package.json" }}
  dep_backup_cache_key: &dep_backup_cache_key
    v1-dependencies

  restore_deps: &restore_deps
    restore_cache:
      keys:
        - *dep_cache_key
        - *dep_backup_cache_key

jobs:
  checkout_code:
    <<: *container_config
    steps:
      - *restore_repo
      - checkout
      - save_cache:
          key: v1-repo-{{ .Branch }}-{{ .Revision }}
          paths:
            - .

  install:
    <<: *container_config
    steps:
      - *restore_repo
      - *restore_deps
      - run: npm install
      - save_cache:
          key: *dep_cache_key
          paths:
            - node_modules

  deploy:
    <<: *container_config
    steps:
      - setup_remote_docker:
          docker_layer_caching: true
      - *restore_repo
      - *restore_deps
      - run:
          name: Setup Environment Variables
          command: |
            echo "export TAG_SUFFIX=$(date +%Y%m%d%H%M%S)" >> $BASH_ENV
            echo 'export IMAGE="todarch/wisit-web:${CIRCLE_BRANCH}-${TAG_SUFFIX}"' >> $BASH_ENV
      - run:
          name: Publish docker image
          command: |
            docker image build -t $IMAGE .
            docker login -u $TD_DOCKER_USER -p $TD_DOCKER_PASSWORD
            docker push $IMAGE
      - add_ssh_keys:
          fingerprints:
            - "3a:a8:c9:72:2b:bd:11:2c:5d:a8:44:84:1c:8c:7d:4f"
      - run:
          name: Deploy app to server via Docker
          command: |
            ssh -o StrictHostKeyChecking=no $SSH_USER@$SSH_HOST "/bin/bash ./deploy_app ${IMAGE}"

workflows:
  version: 2

  build_test_deploy:
    jobs:
      - checkout_code
      - install:
          requires:
            - checkout_code
      - deploy:
          context: todarch-global-ctx
          requires:
            - install
          filters:
            branches:
              only: master
